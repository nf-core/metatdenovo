{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/metatdenovo/master/nextflow_schema.json",
    "title": "nf-core/metatdenovo pipeline parameters",
    "description": "Assembly and annotation of metatranscriptomic data, both prokaryotic and eukaryotic",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "quality_control_options": {
            "title": "Quality control options",
            "type": "object",
            "description": "Option for QC steps",
            "default": "",
            "fa_icon": "fas fa-check",
            "properties": {
                "skip_qc": {
                    "type": "boolean",
                    "description": "Skip all QC steps except for MultiQC.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "Skip FastQC.",
                    "fa_icon": "fas fa-forward"
                }
            }
        },
        "trimming_options": {
            "title": "trimming options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "properties": {
                "clip_r1": {
                    "type": "string",
                    "description": "Instructs Trim Galore to remove bp from the 5' end of read 1 (or single-end reads).",
                    "fa_icon": "fas fa-cut"
                },
                "clip_r2": {
                    "type": "string",
                    "description": "Instructs Trim Galore to remove bp from the 5' end of read 2 (paired-end reads only).",
                    "fa_icon": "fas fa-cut"
                },
                "three_prime_clip_r1": {
                    "type": "string",
                    "description": "Instructs Trim Galore to remove bp from the 3' end of read 1 AFTER adapter/quality trimming has been performed.",
                    "fa_icon": "fas fa-cut"
                },
                "three_prime_clip_r2": {
                    "type": "string",
                    "description": "Instructs Trim Galore to remove bp from the 3' end of read 2 AFTER adapter/quality trimming has been performed.",
                    "fa_icon": "fas fa-cut"
                },
                "save_trimmed": {
                    "type": "boolean",
                    "description": "Save the trimmed FastQ files in the results directory.",
                    "help_text": "By default, trimmed FastQ files will not be saved to the results directory. Specify this flag (or set to true in your config file) to copy these files to the results directory when complete.",
                    "fa_icon": "fas fa-cut"
                },
                "trim_nextseq": {
                    "type": "string",
                    "description": "Instructs Trim Galore to apply the --nextseq=X option, to trim based on quality after removing poly-G tails.",
                    "help_text": "This enables the option Cutadapt `--nextseq-trim=3'CUTOFF` option via Trim Galore, which will set a quality cutoff (that is normally given with -q instead), but qualities of G bases are ignored. This trimming is in common for the NextSeq- and NovaSeq-platforms, where basecalls without any signal are called as high-quality G bases.",
                    "fa_icon": "fas fa-cut"
                },
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip the adapter trimming step.",
                    "help_text": "Use this if your input FastQ files have already been trimmed outside of the workflow or if you're very confident that there is no adapter contamination in your data.",
                    "fa_icon": "fas fa-forward"
                }
            },
            "description": "all the trim option are listed below"
        },
        "hmmer_search_options": {
            "title": "HMMER search options",
            "type": "object",
            "description": "Options for HMMER search",
            "default": "",
            "properties": {
                "hmmdir": {
                    "type": "string",
                    "description": "Directory with hmm files which will be searched for among ORFs",
                    "pattern": "^\\S+",
                    "format": "directory-path",
                    "fa_icon": "fas fa-folder-open"
                },
                "hmmpattern": {
                    "type": "string",
                    "default": "*.hmm",
                    "description": "specify which pattern hmm files end with",
                    "fa_icon": "fas fa-barcode"
                },
                "hmmfiles": {
                    "type": "string",
                    "description": "Comma-separated list of hmm files which will be searched for among ORFs",
                    "pattern": "\\S+hmm(\\.gz)?",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "bbduk_options": {
            "title": "BBDUK options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "sequence_filter": {
                    "type": "string",
                    "description": "Fasta file with sequences to filter away before running assembly etc..",
                    "help_text": "Read sequences matching this file will be filtered out from samples with BBDuk before mapping. If no file is specified, BBDuk will not be run.",
                    "fa_icon": "fas fa-filter"
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "digital_normalization_options": {
            "title": "Digital normalization options",
            "type": "object",
            "description": "Use these option if you need to normalize the reads before the assembly",
            "default": "",
            "fa_icon": "fas fa-align-justify",
            "properties": {
                "bbnorm": {
                    "type": "boolean",
                    "description": "Perform normalization to reduce sequencing depth.",
                    "help_text": "Normalization is performed following the example in https://jgi.doe.gov/data-and-tools/software-tools/bbtools/bb-tools-user-guide/bbnorm-guide/",
                    "fa_icon": "fas fa-align-justify"
                },
                "bbnorm_target": {
                    "type": "integer",
                    "default": 100,
                    "description": "produce an output file of reads with an average depth of nx. ",
                    "fa_icon": "fas fa-align-justify"
                },
                "bbnorm_min": {
                    "type": "integer",
                    "default": 5,
                    "description": "Reads with an apparent depth of under nx will be presumed to be errors and discarded",
                    "fa_icon": "fas fa-align-justify"
                },
                "diginorm": {
                    "type": "boolean",
                    "description": "Perform digital normalization to reduce sequencing depth.",
                    "help_text": "Digital normalization is performed following the example in https://khmer-protocols.readthedocs.io/en/latest/mrnaseq/2-diginorm.html.\\nThere are (hidden) parameters for the cutoff coverage and kmer length for `normalize-by-median.py`, set to defaults following the example above (cutoff: 20 and kmer length: 20).",
                    "fa_icon": "fas fa-align-justify"
                },
                "diginorm_C": {
                    "type": "integer",
                    "default": 20,
                    "description": "Median coverage to keep a read, default 20.",
                    "help_text": "This parameter is passed to `normalize-by-median.py` as the value to `-C` and to `filter-abund.py` as value to both `-C` and `-Z`",
                    "fa_icon": "fas fa-align-justify"
                },
                "diginorm_k": {
                    "type": "integer",
                    "default": 20,
                    "description": "Kmer length in first call of normalize-by-median.py, default 20.",
                    "fa_icon": "fas fa-align-justify"
                }
            }
        },
        "assembler_options": {
            "title": "Assembler options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "assembler": {
                    "type": "string",
                    "default": "megahit",
                    "description": "Specify which assembler you would like to run, possible alternatives: megahit, rnaspades. default: megahit",
                    "fa_icon": "fas fa-bezier-curve"
                },
                "assembly": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "description": "Path to a fasta file with a finished assembly. Assembly will be skipped by the pipeline.",
                    "fa_icon": "far fa-file-code"
                }
            },
            "fa_icon": "fas fa-bezier-curve"
        },
        "orf_caller_options": {
            "title": "ORF Caller options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "orf_caller": {
                    "type": "string",
                    "default": "prodigal",
                    "description": "Specify which ORF caller you would like to run, possible alternatives: prodigal, prokka, transdecoder, default: prodigal.",
                    "fa_icon": "fas fa-phone-volume"
                },
                "prodigal_trainingfile": {
                    "type": "string",
                    "description": "Specify a training file for prodigal. By default prodigal will learn from the input sequences",
                    "fa_icon": "fas fa-phone-volume"
                }
            },
            "fa_icon": "fas fa-phone-volume"
        },
        "functional_annotation_options": {
            "title": "Functional annotation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_eggnog": {
                    "type": "boolean",
                    "description": "Skip EGGNOG functional annotation",
                    "fa_icon": "fas fa-forward"
                },
                "eggnog_dbpath": {
                    "type": "string",
                    "default": "./eggnog",
                    "description": "Specify EGGNOG database path",
                    "fa_icon": "far fa-file-code"
                },
                "skip_kofamscan": {
                    "type": "boolean",
                    "description": "skip kofamscan run",
                    "fa_icon": "fas fa-forward"
                },
                "kofam_dir": {
                    "type": "string",
                    "default": "./kofam",
                    "description": "Path to a directory with KOfam files. Will be created if it doesn't exist.",
                    "help_text": "If a `ko_list` file and/or `profiles` does not exist, they will be downloaded.",
                    "fa_icon": "fas fa-folder-open"
                }
            },
            "fa_icon": "fas fa-clipboard"
        },
        "taxonomy_annotation_options": {
            "title": "Taxonomy annotation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_eukulele": {
                    "type": "boolean",
                    "description": "skip eukulele run",
                    "fa_icon": "fas fa-forward"
                },
                "eukulele_method": {
                    "type": "string",
                    "default": "mets",
                    "description": "Specify which method to use for EUKulele. the alternatives are: mets (metatranscriptomics) or  mags (Metagenome Assembled Genomes). default: mets",
                    "fa_icon": "fas fa-bezier-curve"
                },
                "eukulele_db": {
                    "type": "string",
                    "description": "EUKulele database.",
                    "help_text": "This option allows the user to specify which database (or set of databases, separated by comma) to use with EUKulele. Databases that are provided with EUKulele will be downloaded if not already present inside the database directory (see --eukulele_dbpath). Possible alternatives: phylodb, mmetsp, marmmetsp, eukprot. NB: you can't use this option with a custom database as eukulele will not recognize the name and it will start to download phylodb by default. If you want to use a custom database, please skip this option and specify only --eukulele_dbpath.",
                    "fa_icon": "far fa-file-code"
                },
                "eukulele_dbpath": {
                    "type": "string",
                    "default": "./eukulele",
                    "description": "EUKulele database folder.",
                    "help_text": "If this parameter is set, EUKulele will look for a database to use in this folder. If --eukulele_db also is set, the specified database will be searched for in this directory and if it is not present it will be downloaded. If a custom database (see EUKulele documentation) should be used, EUKulele will assume that it is present in this folder - N.B. only works with one custom database (if using a custom database, point to a directory that only contains that database).",
                    "fa_icon": "far fa-file-code"
                },
                "cat": {
                    "type": "boolean",
                    "description": "run cat taxonomy annotation",
                    "fa_icon": "fab fa-github-alt"
                },
                "cat_db": {
                    "type": "string",
                    "default": "None",
                    "description": "path to cat database",
                    "help_text": "This parameter is mutual exclusive with \u00b4cat_db_generate\u00b4. You need to provide a version of CAT database that has the same DIAMOND version of the module (DIAMOND 2.0.8) otherwise you might encounter issues of incompatibility and the module will fail. We recommend to always use the database provided by CAT website: https://tbb.bio.uu.nl/bastiaan/CAT_prepare/",
                    "fa_icon": "fas fa-database"
                },
                "cat_db_generate": {
                    "type": "boolean",
                    "description": "It will run a CAT command that will download the database",
                    "help_text": "This parameter is mutual exclusive with `cat_db`. when activated, `cat_db_generate` will run a module in order to download and prepare a CAT database. ",
                    "fa_icon": "fas fa-database"
                },
                "cat_official_taxonomy": {
                    "type": "boolean",
                    "description": "Use it if you want assign official taxonomy",
                    "fa_icon": "fas fa-download"
                },
                "save_cat_db": {
                    "type": "boolean",
                    "description": "Use it if you want save the database",
                    "fa_icon": "fas fa-database"
                }
            },
            "fa_icon": "fas fa-address-card"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fas fa-microchip",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/quality_control_options"
        },
        {
            "$ref": "#/definitions/trimming_option"
        },
        {
            "$ref": "#/definitions/hmmer_search_option"
        },
        {
            "$ref": "#/definitions/bbduk_option"
        },
        {
            "$ref": "#/definitions/digital_normalization_option"
        },
        {
            "$ref": "#/definitions/assembler_option"
        },
        {
            "$ref": "#/definitions/orf_caller_options"
        },
        {
            "$ref": "#/definitions/functional_annotation_options"
        },
        {
            "$ref": "#/definitions/taxonomy_annotation_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
